                                                                                                                                                                                
																							
                                
	    contributors: krzysiula#7060, w/#7263																	                                                                        
																						     
																						     
            **DISCLAIMER** keep in mind many things i say here may be partially or completely incorrect, if i'm not 100% sure about an information                               
                           i will put "**OPINION**" next to it, if i'm wrong just contact me i will change anything that's incorrect                                                   
																						
																						
																						
This documentation is intended to help you play around with the behavior of particles, and to create a template for further documentation ** ~ NOT TO CREATE THEM FROM SCRATCH ~ **     
																						
																						
**OPINION**  from what i understand after playing with the file, many particle effects don't have a dedicated mesh, only a plane that's automatically                            
             generated and the texture specified in the .ypt is applied onto it, whenever the particle plays                                                                     
																						
																						
																						
		Many keyframe properties have 2 variations, one with *Min* and the other with *Max* in their names, when the two values are not exactly equal,                          
		the game will use a random value from within that range                                                                                                                 
																							
																											                                                                                         
																							
																		
			*by saying emitter here's what i'm talking about: https://imgur.com/a/VsYK1X0 									
=======================================================================================================================================================================



**EffectRuleDictionary's keyframe properties:** 





-- ptxEmitterRule:m_playbackRateScalarKFP ## KFP stands for keyframe property

         <Item>
             <Unknown0 value="0"/>
             <Unknown4 value="0"/>
             <Unknown10 value="1"/>   Playback rate factor
             <Unknown14 value="0.01"/>   Always 0.01
             <Unknown18 value="0.01"/>   Always 0.01
             <Unknown1C value="0.01"/>   Always 0.01
         </Item>

## scales all keyframes, https://imgur.com/a/FvOQz9k





-- ptxEffectRule:m_dataSphereKFP
		
	   
## no idea what it does
	   




-- ptxEffectRule:m_zoomScalarKFP

       	    <Unknown0 value="0" />
       	    <Unknown4 value="0" />
       	    <Unknown10 value="700" />   X axis
       	    <Unknown14 value="800" />  Y axis
       	    <Unknown18 value="0" />   Z axis
       	    <Unknown1C value="0" />
	   
## responsible for scaling emitters







-- ptxEmitterRule:m_sizeScalarKFP
		
            <Unknown0 value="0" /> ?
            <Unknown4 value="0" /> ?
            <Unknown10 value="254.5414" />   X axis
            <Unknown14 value="254.5414" />   Y axis
            <Unknown18 value="254.5414" />   Z axis
            <Unknown1C value="100" /> ?
			
## responsible for scaling emitters







-- ptxEmitterRule:m_spawnRateOverTimeKFP

            <Unknown0 value="0" /> ?
            <Unknown4 value="0" /> ?
            <Unknown10 value="10" /> ?
            <Unknown14 value="10" /> ?
            <Unknown18 value="10" /> ?
            <Unknown1C value="0" /> ?

## reponsible for spawning emitters over time (probably measured in frames)







-- ptxu_Colour:m_rgbaMinKFP ## rgbaMaxKFP works the same

            <Unknown0 value="0" />   ?
            <Unknown4 value="0" />   ?
            <Unknown10 value="0.705179" />   red channel (values 0-1)
            <Unknown14 value="0.732523" />   green channel (values 0-1)
            <Unknown18 value="0.705179" />   blue channel (values 0-1)
            <Unknown1C value="1" />   alpha channel (values 0-1)
			
## changes the color of the texture







-- ptxEmitterRule:m_particleLifeKFP

            <Unknown0 value="0" />   always set to 0
            <Unknown4 value="0" />   always set to 0
            <Unknown10 value="2" />   value changing the particle life's lenght
            <Unknown14 value="3" />   value changing the particle life's lenght
            <Unknown18 value="0.01" />   typically set to 0 or 0.01
            <Unknown1C value="0.01" />   typically set to 0 or 0.01
			
## changes the lifespan of the particle







-- ptxEmitterRule:m_spawnRateOverTimeKFP

            <Unknown0 value="0" /> ?
            <Unknown4 value="0" /> ?
            <Unknown10 value="5" />   value affecting the spawn rate over time
            <Unknown14 value="9" />   value affecting the spawn rate over time
            <Unknown18 value="0" /> ?
            <Unknown1C value="0" /> ?
			
## affects the spawn rate over time




=======================================================================================================================================================================




**EmitterRuleDictionary's keyframe properties:** 



-- ptxCreationDomain:m_positionKFP

       <Unknown0 value="0" /> ?
       <Unknown4 value="0" /> ?
       <Unknown10 value="-0.02" />   X axis
       <Unknown14 value="0.04" />   Y axis
       <Unknown18 value="-0.02" />   Z axis
       <Unknown1C value="0" /> ?
	   
## specifies emitter's offset upon spawning







-- ptxTargetDomain:m_positionKFP

       <Unknown0 value="0" /> ?
       <Unknown4 value="0" /> ?
       <Unknown10 value="0.011154" />   x axis
       <Unknown14 value="-2" />   y axis
       <Unknown18 value="0" />   z axis
       <Unknown1C value="0" /> ?
	   
## specifies the position the emitter is gonna end up at





-- ptxCreationDomain:m_rotationKFP

       <Unknown0 value="0" /> ?
       <Unknown4 value="0" /> ?
       <Unknown10 value="90" />   X axis, measured in degrees
       <Unknown14 value="0" />   Y axis, measured in degrees
       <Unknown18 value="0" />   Z axis, measured in degrees
       <Unknown1C value="0" /> ?

## specifies emitter's rotation upon spawning




-- ptxTargetDomain:m_sizeOuterKFP

## https://imgur.com/a/iigppl6




-- ptxTargetDomain:m_sizeInnerKFP

## https://imgur.com/a/iigppl6





-- ptxEmitterRule:m_spawnRateOverDistKFP

## spawn rate over distance, no idea how to use it





-- ptxEmitterRule:m_speedScalarKFP

       <Unknown0 value="0" /> ?
       <Unknown4 value="0" /> ?
       <Unknown10 value="0.8" />   x axis??
       <Unknown14 value="1.4" />   y axis??
       <Unknown18 value="0" />   z axis??
       <Unknown1C value="0" /> ?

## **OPINION** scales speed of the emitter (probably multiplies the speed given by some other KFP)







-- ptxEmitterRule:m_accnScalarKFP


       <Unknown0 value="0" /> ?
       <Unknown4 value="0" /> ?
       <Unknown10 value="0.8" />   x axis
       <Unknown14 value="1.4" />   y axis
       <Unknown18 value="0" />   z axis
       <Unknown1C value="0" /> ?


## introduces acceleration to the particles







-- ptxEmitterRule:m_matrixWeightScalarKFP

## no idea what it does




-- ptxEmitterRule:m_dampeningScalarKFP

        <Unknown0 value="0" /> ?
        <Unknown4 value="0" /> ? 
        <Unknown10 value="100" />   x axis?
        <Unknown14 value="100" />   y axis?
        <Unknown18 value="0" />   z axis?
        <Unknown1C value="0" /> ?
	

## **OPINION** It seems to dampen the movement of particles in specified directions, adds some inertia to them




-- ptxEmitterRule:m_inheritVelocityKFP

        <Unknown0 value="0" /> ?
        <Unknown4 value="0" /> ? 
        <Unknown10 value="100" />   x axis
        <Unknown14 value="100" />   y axis
        <Unknown18 value="0" />   z axis
        <Unknown1C value="0" /> ?
	   
## specifies the emitter's velocity 



=======================================================================================================================================================================



**ParticleRuleDictionary's keyframe properties:**




-- ptxu_Acceleration:m_xyzMinKFP

        <Unknown0 value="0" /> ?
        <Unknown4 value="0" /> ?
        <Unknown10 value="1.5" />   x axis
        <Unknown14 value="-2.2" />   y axis
        <Unknown18 value="1.2" />   z axis
        <Unknown1C value="0" /> ?
		
## specifies acceleration of emitters







-- ptxu_Rotation:m_initialAngleMinKFP

        <Unknown0 value="0" /> ?
        <Unknown4 value="0" /> ?
        <Unknown10 value="-35" />   x axis, measured in degrees
        <Unknown14 value="0" />   y axis, measured in degrees
        <Unknown18 value="0" />   z axis, measured in degrees
        <Unknown1C value="0" /> ?
		
## specifies the emitter's angle upon spawning







-- ptxu_Rotation:m_angleMinKFP 

        <Unknown0 value="0" /> ?
        <Unknown4 value="0" /> ?
        <Unknown10 value="10" />   x axis, measured in degrees
        <Unknown14 value="0" />   y axis, measured in degrees
        <Unknown18 value="0" />   z axis, measured in degrees
        <Unknown1C value="0" /> ?
		
## specifies the rotation the emitter will achieve 







-- ptxu_Size:m_whdMinKFP

        <Unknown0 value="0" />   
        <Unknown4 value="0" />   
        <Unknown10 value="0.2" />   x axis
        <Unknown14 value="0.2" />   y axis
        <Unknown18 value="0" />   z axis
        <Unknown1C value="0" />   
		
## specifies the size of emitters, unk0 and unk4 are often used





-- ptxu_AnimateTexture:m_animRateKFP

## uv anim?



-- ptxu_Size:m_tblrScalarKFP

        <Unknown0 value="0" /> ?
        <Unknown4 value="0" /> ?
        <Unknown10 value="1" />   x axis??
        <Unknown14 value="1" />   y axis??
        <Unknown18 value="1" />   z axis??
        <Unknown1C value="1" /> ?
## related to size, no idea how to use it




-- ptxu_Colour:m_emissiveIntensityKFP

## specifies intensity of emissiveness, if it's using a shader supporting it




not a keyframe property but it affects emitters with ptxu_Wind:m_influenceKFP

     	<Type value="Wind" />
     	<UnknownD0 value="20" />
     	<UnknownD4 value="50" />
     	<UnknownD8 value="1" />
     	<UnknownDC value="2" />
     	<UnknownE0 value="0" />

## **OPINION** specifies wind direction and speed





-- ptxu_Wind:m_influenceKFP

        <Unknown0 value="0" /> ?
        <Unknown4 value="0" /> ?
        <Unknown10 value="0" />   x axis??
        <Unknown14 value="0" />   y axis??
        <Unknown18 value="0" />   z axis??
        <Unknown1C value="0" /> ?
		
## specifies how much will the emitter be affected by wind 







-- ptxu_Noise:m_velNoiseMineKFP

        <Unknown0 value="0" /> ?
        <Unknown4 value="0" /> ?
        <Unknown10 value="1" />   x axis
        <Unknown14 value="1" />   y axis
        <Unknown18 value="0" />   z axis
        <Unknown1C value="0" /> ?
	
## introduces noise to particle's velocity







-- ptxu_Noise:m_posNoiseMinKFP

        <Unknown0 value="0" /> ?
        <Unknown4 value="0" /> ?
        <Unknown10 value="1" />   x axis
        <Unknown14 value="1" />   y axis
        <Unknown18 value="0" />   z axis
        <Unknown1C value="0" /> ?


## introduces noise to particle's position
